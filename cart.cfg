#
# VIC-20 8k cart image with cc65 compiler suite
# Linker configuration file for unexpanded VIC-20
#

SYMBOLS {
    __STACKSIZE__: type = weak, value = $0100; # 256-byte stack
}

MEMORY {
    ZP:       file = "", start = $0002, size = $001A;
    RAM:      file = "", start = $1000, size = $0E00-__STACKSIZE__, define = yes;
    LOADADDR: file = %O, start = $9FFE, size = $0002;
    CARTHDR:  file = %O, start = $A000, size = $0009;
    MAIN:     file = %O, start = $A009, size = $2000-$0009, fill=yes;
}

SEGMENTS {
    ZEROPAGE: load = ZP,       type = zp;
    LOADADDR: load = LOADADDR, type = ro, optional = yes;
    CARTHDR:  load = CARTHDR,  type = ro;
    STARTUP:  load = MAIN,     type = ro;
    CODE:     load = MAIN,     type = ro;
    ONCE:     load = MAIN,     type = ro;
    RODATA:   load = MAIN,     type = ro;
    DATA:     load = MAIN,     type = rw, define = yes, run = RAM;
    BSS:      load = RAM,      type = bss, define = yes;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
